name: Replace Old Code with New

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize

jobs:
  replace:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Updated Code
        id: process-files
        uses: actions/github-script@v5
        with:
          script: |
            const { owner, repo, number } = context.issue;

            // Get the list of files changed in the PR
            const { data: files } = await github.rest.pulls.listFiles({
              owner, repo, pull_number: number
            });

            const updatedFiles = [];
            const fs = require('fs');

            for (const file of files) {
              // Read file contents
              const fileContent = fs.readFileSync(file.filename, 'utf8');
              console.log("file content")
              console.log(fileContent)
              console.log('----------')

              // Use the built-in fetch function
              const response = await github.request({
                url: 'https://reqres.in/api/users',
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                // change content to fileContent
                // body: JSON.stringify({ content: 'hi' , explanation: 'mock explanation'})
                body: JSON.stringify({
                  "name": "morpheus",
                  "job": "leader"
                })
              });
              // Assuming the API returns the entire new content of the file
              // change response.data.id to appropriate later
              const newContent = response.data.id;

              console.log("server response:");
              console.log(newContent);
              console.log('---------------------')
              // Write new content to file
              fs.writeFileSync(file.filename, newContent, 'utf8');

              updatedFiles.push({ path: file.filename, explanation: newContent });
            }

            return {
              updatedFiles
            };
      - name: Commit and Push
        run: |
            git status
      - name: Create Branch
        run: git checkout -b new-branch